dnl this files has to be processed by autoconf
AC_PREREQ(2.61)

AC_INIT([libelli],[0.0.1])
AC_CONFIG_SRCDIR([README])
AC_CONFIG_SRCDIR(src/elli.h)
AC_CONFIG_HEADERS(src/elli_config.h)
AM_INIT_AUTOMAKE([no-define])
AM_MAINTAINER_MODE

dnl Checks for programs.
AC_PROG_CC
AC_PROG_LD

dnl we don't need C++ compiler
undefine([AC_PROG_CXX])
AC_DEFUN([AC_PROG_CXX], [])
undefine([AC_PROG_CXXCPP])
AC_DEFUN([AC_PROG_CXXCPP], [dummy_cxxcpp=disabled])

AM_PROG_LIBTOOL
AC_PROG_INSTALL

MAJOR_VERSION=0
MINOR_VERSION=0
BUGFIX_VERSION=1
EXTRA_VERSION="-dev"

ELLI_VERSION_TEXT="${MAJOR_VERSION}.${MINOR_VERSION}.${BUGFIX_VERSION}${EXTRA_VERSION}"
ELLI_VERSION_ID=`expr [$]MAJOR_VERSION \* 10000 + [$]MINOR_VERSION \* 100 + [$]BUGFIX_VERSION`

dnl generate elli_version.h {{{
echo "/* automatically generated by configure */" > elli_version.h.new
echo "/* edit configure.in to change the version number */" >> elli_version.h.new
echo "#define ELLI_MAJOR_VERSION $MAJOR_VERSION" >> elli_version.h.new
echo "#define ELLI_MINOR_VERSION $MINOR_VERSION" >> elli_version.h.new
echo "#define ELLI_BUGFIX_VERSION $BUGFIX_VERSION" >> elli_version.h.new
echo "#define ELLI_EXTRA_VERSION \"$EXTRA_VERSION\"" >> elli_version.h.new
echo "#define ELLI_VERSION_TEXT \"$ELLI_VERSION_TEXT\"" >> elli_version.h.new
echo "#define ELLI_VERSION_ID $ELLI_VERSION_ID" >> elli_version.h.new
cmp elli_version.h.new $srcdir/src/elli_version.h >/dev/null 2>&1
if test $? -ne 0 ; then
  rm -f $srcdir/src/elli_version.h && mv elli_version.h.new $srcdir/src/elli_version.h && \
  echo 'Updated src/elli_version.h'
else
  rm -f elli_version.h.new
fi
dnl }}}

dnl {{{ AX_CONFIG_NICE
AC_DEFUN([AX_CONFIG_NICE],[
	AC_REQUIRE([AC_PROG_EGREP])
	AC_REQUIRE([LT_AC_PROG_SED])
	AC_SUBST([EGREP])
	AC_SUBST([SED])
	test -f $1 && mv $1 $1.old
	rm -f $1.old
	cat >$1<<EOF
#! /bin/sh
#
# Created by configure

EOF

  for var in CFLAGS CXXFLAGS CPPFLAGS LDFLAGS EXTRA_LDFLAGS_PROGRAM LIBS CC CXX; do
    eval val=\$$var
    if test -n "$val"; then
      echo "$var='$val' \\" >> $1
    fi
  done

  echo "'[$]0' \\" >> $1
  if test `expr -- [$]0 : "'.*"` = 0; then
    CONFIGURE_COMMAND="$CONFIGURE_COMMAND '[$]0'"
  else
    CONFIGURE_COMMAND="$CONFIGURE_COMMAND [$]0"
  fi
  for arg in $ac_configure_args; do
     if test `expr -- $arg : "'.*"` = 0; then
        if test `expr -- $arg : "--.*"` = 0; then
       	  break;
        fi
        echo "'[$]arg' \\" >> $1
        CONFIGURE_OPTIONS="$CONFIGURE_OPTIONS '[$]arg'"
     else
        if test `expr -- $arg : "'--.*"` = 0; then
       	  break;
        fi
        echo "[$]arg \\" >> $1
        CONFIGURE_OPTIONS="$CONFIGURE_OPTIONS [$]arg"
     fi
  done
  echo '"[$]@"' >> $1
  chmod +x $1
  CONFIGURE_COMMAND="$CONFIGURE_COMMAND $CONFIGURE_OPTIONS"
  AC_SUBST([CONFIGURE_COMMAND])
  AC_SUBST([CONFIGURE_OPTIONS])
])
dnl }}}

AX_CONFIG_NICE([config.nice])

DEFAULT_INSTALL_PREFIX="/usr/local"

AC_ARG_WITH(openssl,
  [AS_HELP_STRING([--with-openssl],[specify OpenSSL install prefix])],
  [ ],
  [with_openssl=yes]
)

AC_MSG_CHECKING([for OpenSSL])
if test "x$with_openssl" = "xyes"; then
  for i in /usr /usr/local /local /opt; do
    if test -f "$i/include/openssl/ecdh.h"; then
      OPENSSL_DIR="$i"
      break;
    fi
  done
else
  if test -f "$with_openssl/include/openssl/ecdh.h"; then
    OPENSSL_DIR="$with_openssl"
  else
    AC_MSG_ERROR([Can''t find OpenSSL''s ecdh.h header under $with_openssl directory. Please check the path and make sure that OpenSSL >= 0.9.8 is installed.])
  fi
fi

if test "x$OPENSSL_DIR" = "x"; then
  AC_MSG_RESULT([not found])
  AC_MSG_ERROR([Unable to locate OpenSSL headers, please use --with-openssl=<DIR>])
else
  AC_MSG_RESULT([$OPENSSL_DIR])

  AC_CHECK_LIB([crypto], [EC_KEY_new], [], [
    AC_MSG_ERROR([EC_KEY_new() is missing. Make sure that OpenSSL >= 0.9.8 is installed and check config.log for more details])],
    [-L$OPENSSL_DIR/lib]
  )

  LIBS="-L$OPENSSL_DIR/lib -lcrypto $LIBS"
  CFLAGS="-I$OPENSSL_DIR/include $CFLAGS"
fi

AC_ARG_ENABLE(debug,
  [AS_HELP_STRING([--enable-debug],[enable debugging symbols and compile flags])
  ],
  [
    if test x"$enableval" = xyes ; then
      debug="yes"
    else
      debug="no"
    fi
  ]
)

if test x"$debug" = xyes ; then
  AC_DEFINE([ELLI_DEBUG], [], [debug build])

  if test x"$GCC" = xyes; then

    dnl Remove any optimization flags from CFLAGS
    changequote({,})
    CFLAGS=`echo "$CFLAGS" | sed -e 's/-O[0-9s]*//g'`
    CFLAGS=`echo "$CFLAGS" | sed -e 's/-g[0-2]\? //g'`
    changequote([,])
    CFLAGS="$CFLAGS -g3 -Wall -O0"

  fi

  dnl Do not strip symbols from developer object files.
  INSTALL_STRIP_FLAG=""
else
  dnl Make sure to strip symbols from non-developer object files.
  INSTALL_STRIP_FLAG="-s"
fi

AC_SUBST(INSTALL_STRIP_FLAG)

AC_CONFIG_FILES([Makefile src/Makefile examples/Makefile])
AC_OUTPUT

